// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recruitment_App.Repo.Context;

#nullable disable

namespace Recruitment_App.Repo.Migrations
{
    [DbContext(typeof(RecruitmentContext))]
    [Migration("20221224161124_updates")]
    partial class updates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobTitlesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantsId");

                    b.HasIndex("JobTitlesId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("JobCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumApplications")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidityDurationFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityDurationTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobCategoryId");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobTitleSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("SkillId");

                    b.ToTable("JobTitleSkill");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Application", b =>
                {
                    b.HasOne("Recruitment_App.Repo.Entities.Applicant", "Applicants")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recruitment_App.Repo.Entities.JobTitle", "JobTitles")
                        .WithMany("Applications")
                        .HasForeignKey("JobTitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");

                    b.Navigation("JobTitles");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobTitle", b =>
                {
                    b.HasOne("Recruitment_App.Repo.Entities.JobCategory", "JobCategory")
                        .WithMany("JobTitles")
                        .HasForeignKey("JobCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobCategory");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobTitleSkill", b =>
                {
                    b.HasOne("Recruitment_App.Repo.Entities.JobTitle", "JobTitles")
                        .WithMany("Skills")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recruitment_App.Repo.Entities.Skill", "Skills")
                        .WithMany("JobTitles")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobTitles");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Applicant", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobCategory", b =>
                {
                    b.Navigation("JobTitles");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.JobTitle", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Recruitment_App.Repo.Entities.Skill", b =>
                {
                    b.Navigation("JobTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
